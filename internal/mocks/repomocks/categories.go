// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repo/categories.go

// Package repomocks is a generated GoMock package.
package repomocks

import (
	reflect "reflect"
	repo "test_news/internal/repo"

	gomock "github.com/golang/mock/gomock"
)

// MockCategories is a mock of Categories interface.
type MockCategories struct {
	ctrl     *gomock.Controller
	recorder *MockCategoriesMockRecorder
}

// MockCategoriesMockRecorder is the mock recorder for MockCategories.
type MockCategoriesMockRecorder struct {
	mock *MockCategories
}

// NewMockCategories creates a new mock instance.
func NewMockCategories(ctrl *gomock.Controller) *MockCategories {
	mock := &MockCategories{ctrl: ctrl}
	mock.recorder = &MockCategoriesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCategories) EXPECT() *MockCategoriesMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCategories) Create(exec repo.Querier, newsId int64, categories []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", exec, newsId, categories)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockCategoriesMockRecorder) Create(exec, newsId, categories interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCategories)(nil).Create), exec, newsId, categories)
}

// Delete mocks base method.
func (m *MockCategories) Delete(exec repo.Querier, newsId int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", exec, newsId)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockCategoriesMockRecorder) Delete(exec, newsId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockCategories)(nil).Delete), exec, newsId)
}
