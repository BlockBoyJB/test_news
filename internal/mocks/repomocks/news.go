// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repo/news.go

// Package repomocks is a generated GoMock package.
package repomocks

import (
	reflect "reflect"
	model "test_news/internal/model"
	repo "test_news/internal/repo"

	gomock "github.com/golang/mock/gomock"
)

// MockNews is a mock of News interface.
type MockNews struct {
	ctrl     *gomock.Controller
	recorder *MockNewsMockRecorder
}

// MockNewsMockRecorder is the mock recorder for MockNews.
type MockNewsMockRecorder struct {
	mock *MockNews
}

// NewMockNews creates a new mock instance.
func NewMockNews(ctrl *gomock.Controller) *MockNews {
	mock := &MockNews{ctrl: ctrl}
	mock.recorder = &MockNewsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNews) EXPECT() *MockNewsMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockNews) Create(exec repo.Querier, news model.News) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", exec, news)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockNewsMockRecorder) Create(exec, news interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockNews)(nil).Create), exec, news)
}

// FindWithCategories mocks base method.
func (m *MockNews) FindWithCategories(exec repo.Querier, limit, offset int) ([]model.News, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindWithCategories", exec, limit, offset)
	ret0, _ := ret[0].([]model.News)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindWithCategories indicates an expected call of FindWithCategories.
func (mr *MockNewsMockRecorder) FindWithCategories(exec, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindWithCategories", reflect.TypeOf((*MockNews)(nil).FindWithCategories), exec, limit, offset)
}

// Update mocks base method.
func (m *MockNews) Update(exec repo.Querier, id int64, title, content *string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", exec, id, title, content)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockNewsMockRecorder) Update(exec, id, title, content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockNews)(nil).Update), exec, id, title, content)
}
